{"version":3,"sources":["components/store/actions/actionTypes.jsx","components/store/reducers/todos.jsx","components/store/reducers/errors.jsx","components/store/sagas/todosSagas.jsx","components/store/store.jsx","components/todo/TodoList.jsx","components/todo/TodoListForm.jsx","components/store/actions/todos.jsx","components/todo/TodoMain.jsx","shared/Theme.tsx","shared/form/TextInputWrapped.js","components/todo/utils/EditValidation.js","components/Loader.jsx","components/todo/TodoEdit.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FETCHING_TODOS","ADD_TODO_START","EDIT_TODO_START","REMOVE_TODO_START","COMPLETE_TODO_START","FETCHING_TODOS_COMPLETE","ADD_TODO_COMPLETE","EDIT_TODO_COMPLETE","REMOVE_TODO_COMPLETE","COMPLETE_TODO_COMPLETE","FETCH_TODO_ERR","ADD_TODO_ERR","EDIT_TODO_ERR","REMOVE_TODO_ERR","COMPLETE_TODO_ERR","initialState","todos","mounted","state","action","type","actions","EDIT_TODOS","map","todo","id","updates","REMOVE_TODO","filter","message","fetchTodosSaga","addNewTodoSaga","editTodoSaga","removeTodoSaga","completeTodoSaga","todoWatcher","fetchTodos","IsomorphFetch","call","response","json","console","log","put","addNewTodo","title","postHeaders","Headers","append","method","headers","body","JSON","stringify","editTodo","patchHeaders","deleteTodo","completeTodo","takeEvery","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","list","visible","opacity","hidden","item","TodoItem","dispatch","useDispatch","history","useHistory","ListItem","style","completed","variants","component","motion","div","key","button","onClick","push","ListItemText","primary","ListItemSecondaryAction","Button","variant","color","size","disabled","tabIndex","DoneAllOutlined","IconButton","Close","connect","withStyles","theme","listRoot","width","maxWidth","backgroundColor","palette","background","paper","overflowY","classes","List","initial","animate","className","index","initalState","display","justifyContent","alignItems","flexDirection","backgroundBlendMode","padding","spacing","newTaskAction","props","useForm","mode","handleSubmit","register","setValue","reset","Paper","Typography","onSubmit","data","as","TextField","name","margin","label","Replay","fontSize","styles","height","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","input","gridArea","pre","TodoMain","useEffect","createMuiTheme","purple","secondary","pink","overrides","MuiButton","root","borderRadius","border","boxShadow","Theme","CssBaseline","children","TextInputWrapped","validationMessages","EditFormSchema","yup","shape","min","max","required","description","ensure","strict","when","is","val","then","otherwise","notRequired","progress","CircularProgress","thickness","TodoListDetails","completedButtonHandler","values","saveButtonHandler","removeButtonHandler","removeTodo","this","container","initialValues","validationSchema","handleReset","errors","handleChange","touched","isValid","Grid","edit","xs","topButtons","ArrowBackIos","titleEdit","onChange","value","helperText","error","Boolean","descInput","multiline","Loader","Component","currentTodo","find","parseInt","match","params","initialTodo","marginBottom","marginRight","detailsButtonText","App","exact","path","TodoEdit","to","location","hostname","store","createStore","combineReducers","todosReducer","errorsReducer","applyMiddleware","run","config","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1ad97926.chunk.js","sourcesContent":["//storing all these action types because its getting hard to keep track of each part of the async behaviors in saga/redux\n\n//initializer actions\nexport const FETCHING_TODOS = \"FETCHING_TODOS\";\nexport const ADD_TODO_START = \"ADD_TODO_START\";\nexport const COMPLETE_TODO_START = \"COMPLETE_TODO_START\";\nexport const REMOVE_TODO_START = \"REMOVE_TODO_START\";\nexport const EDIT_TODO_START = \"EDIT_TODO_START\";\n\n//confirmation actions\nexport const FETCHING_TODOS_COMPLETE = \"FETCHING_TODOS_COMPLETE\";\nexport const ADD_TODO_COMPLETE = \"ADD_TODO_COMPLETE\";\nexport const EDIT_TODO_COMPLETE = \"EDIT_TODO_COMPLETE\";\nexport const REMOVE_TODO_COMPLETE = \"REMOVE_TODO_COMPLETE\";\nexport const COMPLETE_TODO_COMPLETE = \"COMPLETE_TODO_COMPLETE\";\n\n//err handle actions\nexport const EDIT_TODO_ERR = \"EDIT_TODO_ERR\";\nexport const REMOVE_TODO_ERR = \"REMOVE_TODO_ERR\";\nexport const COMPLETE_TODO_ERR = \"COMPLETE_TODO_ERR\";\nexport const ADD_TODO_ERR = \"ADD_TODO_ERR\";\nexport const FETCH_TODO_ERR = \"FETCH_TODO_ERR\";\n\nexport default {\n  FETCHING_TODOS,\n  ADD_TODO_START,\n  EDIT_TODO_START,\n  REMOVE_TODO_START,\n  COMPLETE_TODO_START,\n  FETCHING_TODOS_COMPLETE,\n  ADD_TODO_COMPLETE,\n  EDIT_TODO_COMPLETE,\n  REMOVE_TODO_COMPLETE,\n  COMPLETE_TODO_COMPLETE,\n  FETCH_TODO_ERR,\n  ADD_TODO_ERR,\n  EDIT_TODO_ERR,\n  REMOVE_TODO_ERR,\n  COMPLETE_TODO_ERR,\n};\n","import actions from \"../actions/actionTypes\";\n\nlet initialState = {\n  todos: [],\n  mounted: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case actions.FETCHING_TODOS_COMPLETE:\n      return {\n        mounted: true,\n        todos: action.todos\n      };\n    case actions.EDIT_TODOS:\n      return {\n        ...state,\n        todos: state.map(todo => {\n          if (todo.id === action.id) {\n            return {\n              ...todo,\n              ...action.updates\n            };\n          }\n          return todo;\n        })\n      };\n    case actions.REMOVE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(({ id }) => id !== action.id)\n      };\n    default:\n      return state;\n  }\n};\n","import actions from '../actions/actionTypes';\n\nexport default (state = {}, action) => {\n\tswitch(action.type){\n\t\tcase actions.FETCH_TODO_ERR:\n\t\t\treturn { message: actions.message };\n\t\tcase actions.ADD_TODO_ERR: \n\t\t\treturn { message: actions.message };\n\t\tcase actions.COMPLETE_TODO_ERR:\n\t\t\treturn { message: actions.message };\n\t\tcase actions.EDIT_TODO_ERR: \n\t\t\treturn { message: actions.message };\n\t\tcase actions.REMOVE_TODO_ERR:\n\t\t\treturn { message: actions.message };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};","import { call, put, takeEvery } from \"redux-saga/effects\";\nimport actions from \"../actions/actionTypes\";\nimport IsomorphFetch from \"isomorphic-fetch\";\n\n// worker sagas that report to the watcher\n\nexport function* fetchTodosSaga(action) {\n  const fetchTodos = () => {\n    return IsomorphFetch(`https://practiceapi.devmountain.com/api/tasks`);\n  };\n  try {\n    const response = yield call(fetchTodos);\n    const todos = yield response.json();\n    console.log(todos);\n    yield put({ type: actions.FETCHING_TODOS_COMPLETE, todos: todos });\n  } catch (error) {\n    yield put({ type: actions.FETCH_TODO_ERR, message: error.message });\n  }\n}\n\nexport function* addNewTodoSaga(action) {\n  const addNewTodo = ({ title }) => {\n    const postHeaders = new Headers();\n    postHeaders.append(\"Content-Type\", \"application/json\");\n    return IsomorphFetch(`https://practiceapi.devmountain.com/api/tasks`, {\n      method: \"POST\",\n      headers: postHeaders,\n      body: JSON.stringify({ title: title })\n    });\n  };\n  try {\n    const response = yield addNewTodo(action.todo);\n    const todos = yield response.json();\n    yield put({ type: actions.ADD_TODO_COMPLETE });\n    yield put({ type: actions.FETCHING_TODOS_COMPLETE, todos: todos });\n  } catch (error) {\n    yield put({ type: actions.ADD_TODO_ERR, message: error.message });\n  }\n}\n\nexport function* editTodoSaga(action) {\n  const editTodo = updates => {\n    const patchHeaders = new Headers();\n    patchHeaders.append(\"Content-Type\", \"application/json\");\n    patchHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n    return IsomorphFetch(\n      `https://practiceapi.devmountain.com/api/tasks/${updates.id}`,\n      {\n        method: \"PATCH\",\n        headers: patchHeaders,\n        body: JSON.stringify(updates)\n      }\n    );\n  };\n  try {\n    const response = yield editTodo(action.id, action.updates);\n    const todos = yield response.json();\n    yield put({ type: actions.EDIT_TODO_COMPLETE });\n    yield put({ type: actions.FETCHING_TODOS_COMPLETE, todos: todos });\n  } catch (error) {\n    yield put({ type: actions.EDIT_TODO_ERR, message: error.message });\n  }\n}\n\nexport function* removeTodoSaga(action) {\n  const deleteTodo = id => {\n    return IsomorphFetch(\n      `https://practiceapi.devmountain.com/api/tasks/${id}`,\n      {\n        method: \"DELETE\"\n      }\n    );\n  };\n  try {\n    const response = yield deleteTodo(action.id);\n    const todos = yield response.json();\n    yield put({ type: actions.REMOVE_TODO_COMPLETE });\n    yield put({ type: actions.FETCHING_TODOS_COMPLETE, todos: todos });\n  } catch (error) {\n    yield put({ type: actions.REMOVE_TODO_ERR, message: error.message });\n  }\n}\n\nexport function* completeTodoSaga(action) {\n  const completeTodo = id => {\n    return IsomorphFetch(\n      `https://practiceapi.devmountain.com/api/tasks/${id}`,\n      {\n        method: \"PUT\"\n      }\n    );\n  };\n  try {\n    const response = yield completeTodo(action.id);\n    const todos = yield response.json();\n    yield put({ type: actions.COMPLETE_TODO_COMPLETE });\n    yield put({ type: actions.FETCHING_TODOS_COMPLETE, todos: todos });\n  } catch (error) {\n    yield put({ type: actions.COMPLETE_TODO_ERR, message: error.message });\n  }\n}\n\n//watcher that calls on the workers in params\n//wanted to use fork independent watchers but seems it saga already forks based on yields\n\nexport default function* todoWatcher() {\n  yield takeEvery(actions.FETCHING_TODOS, fetchTodosSaga);\n  yield takeEvery(actions.ADD_TODO_START, addNewTodoSaga);\n  yield takeEvery(actions.EDIT_TODO_START, editTodoSaga);\n  yield takeEvery(actions.REMOVE_TODO_START, removeTodoSaga);\n  yield takeEvery(actions.COMPLETE_TODO_START, completeTodoSaga);\n}\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport todosReducer from './reducers/todos';\nimport errorsReducer from './reducers/errors';\nimport todoWatcher from './sagas/todosSagas'\n\n//making store its own component to make it easier to read on index\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default () => {\n    const store = createStore(\n        combineReducers({\n            todos: todosReducer,\n            error: errorsReducer\n        })\n        , composeEnhancers(applyMiddleware(sagaMiddleware))\n    );\n    sagaMiddleware.run(todoWatcher);\n    return store;\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Button,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Close, DoneAllOutlined } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { COMPLETE_TODO_START, REMOVE_TODO_START } from \"../store\";\n\nconst styles = (theme) => ({\n  listRoot: {\n    width: \"100%\",\n    maxWidth: 500,\n    backgroundColor: theme.palette.background.paper,\n    overflowY: \"auto\",\n  },\n});\n\nconst list = {\n  visible: { opacity: 1 },\n  hidden: { opacity: 0 },\n};\n\nconst item = {\n  visible: { opacity: 1 },\n  hidden: { opacity: 0 },\n};\n\nconst TodoItem = ({ todo }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  return (\n    <ListItem\n      style={{ opacity: todo.completed ? 0.4 : 1 }}\n      variants={item}\n      component={motion.div}\n      key={todo.id}\n      button\n      onClick={() => {\n        history.push(`/edit/${todo.id}`);\n      }}\n    >\n      <ListItemText primary={`${todo.id} : ${todo.title}`} />\n      <ListItemSecondaryAction>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          disabled={todo.completed}\n          tabIndex={-1}\n          onClick={() => dispatch({ type: COMPLETE_TODO_START, id: todo.id })}\n        >\n          <DoneAllOutlined />\n          Completed\n        </Button>\n        <IconButton\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={() => dispatch({ type: REMOVE_TODO_START, id: todo.id })}\n        >\n          <Close />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport const TodoList = ({ classes, todos }) => (\n  <List\n    component={motion.div}\n    initial=\"hidden\"\n    animate=\"visible\"\n    variants={list}\n    className={classes.listRoot}\n  >\n    {todos.map((todo, index) => (\n      <TodoItem key={todo.id} index={index} todo={todo} />\n    ))}\n  </List>\n);\n\nTodoList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  todos: state.todos.todos,\n});\n\nexport default connect(mapStateToProps, null)(withStyles(styles)(TodoList));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Paper,\n  TextField,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useForm } from \"react-hook-form\";\nimport { RHFInput } from \"react-hook-form-input\";\nimport { Replay } from \"@material-ui/icons\";\nimport { addTodo } from \"../store/actions/todos\";\nimport { useDispatch } from \"react-redux\";\n\nconst initalState = {\n  title: \"\",\n};\n\nconst styles = (theme) => ({\n  paper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    background:\n      \"linear-gradient(120deg, #FFDEE9 0%, #dfe6e9 25%, #74b9ff 25%, #B5FFFC 100%)\",\n    backgroundBlendMode: \"overlay\",\n    padding: theme.spacing(2),\n    width: 500,\n  },\n  newTaskAction: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n});\n\nconst TodoListAddNew = (props) => {\n  const dispatch = useDispatch();\n  const { handleSubmit, register, setValue, reset } = useForm({\n    mode: \"onChange\",\n  });\n  // so you can destructure any methods related to the current from you are useing that you want to use, usually you will need register and handleSubmit to hook into the lib's context. please note: setValue behaves like react.memo() it tries not to unessesarilly rerender\n\n  return (\n    <Paper className={props.classes.paper}>\n      <Typography variant=\"h5\">TASK TRACKER</Typography>\n\n      <form\n        onSubmit={handleSubmit((data) => {\n          console.log(\"submitted:\", data);\n          dispatch(addTodo(data));\n          reset(initalState);\n        })}\n      >\n        {/* RHFInput is the wrapper companion lib that automatically wraps ui components */}\n        <RHFInput\n          as={<TextField />}\n          name=\"title\"\n          register={register}\n          setValue={setValue}\n          margin=\"normal\"\n          variant=\"outlined\"\n          label=\"Enter Task Title\"\n        />\n\n        <div className={props.classes.newTaskAction}>\n          <Button color=\"primary\" variant=\"outlined\" type=\"submit\">\n            Add Task\n          </Button>\n          <IconButton\n            variant=\"outlined\"\n            onClick={() => {\n              reset(initalState);\n            }}\n          >\n            <Replay fontSize=\"small\" />\n          </IconButton>\n        </div>\n      </form>\n    </Paper>\n  );\n};\n\nTodoListAddNew.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TodoListAddNew);\n","import actions from './actionTypes';\n\nexport const fetchTodos = () => ({\n\ttype: actions.FETCHING_TODOS\n})\n\nexport const addTodo = (todo) => ({\n\ttype: actions.ADD_TODO_START,\n\ttodo\n});\n\nexport const removeTodo = (id) => ({\n\ttype: actions.REMOVE_TODO_START,\n\tid\n});\n\nexport const completeTodo = (id) => ({\n\ttype: actions.COMPLETE_TODO_START,\n\tid\n});\n\nexport const editTodo = (id, updates) => ({\n\ttype: actions.EDIT_TODO_START,\n\tid,\n\tupdates\n});\n","import React, { useEffect } from \"react\";\nimport List from \"./TodoList\";\nimport Form from \"./TodoListForm\";\nimport { useDispatch } from \"react-redux\";\nimport { FETCHING_TODOS } from \"../store\";\n\nconst styles = {\n  height: \"100vh\",\n  padding: \"1em\",\n  display: \"grid\",\n  gridTemplateColumns: `1fr 1fr 1fr 1fr`,\n  gridTemplateRows: `1fr 1fr 1fr .5fr`,\n  gridTemplateAreas: `\n  \"input input list list\"\n  \"input input list list\" \n  \"pre pre list list\" \n  \"nav nav list list\"`,\n  input: {\n    gridArea: \"input\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  list: {\n    gridArea: \"list\",\n    overflowY: \"auto\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  pre: {\n    gridArea: \"pre\",\n  },\n};\n\nexport const TodoMain = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({ type: FETCHING_TODOS });\n  }, [dispatch]);\n\n  return (\n    <div style={styles}>\n      <div className=\"input\" style={styles.input}>\n        <Form />\n      </div>\n      <div className=\"list\" style={styles.list}>\n        <List />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  CssBaseline,\n  MuiThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core\";\n\nimport { purple, pink } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: purple,\n    secondary: pink,\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        borderRadius: 4,\n        border: 0,\n        color: \"linear-gradient(17deg, #4834d4 30%, #ff7979 90%)\",\n        boxShadow: \"0 3px 5px 2px rgba(104, 109, 224, .4)\",\n      },\n    },\n  },\n});\n\nconst Theme = (props: any) => {\n  return (\n    <CssBaseline>\n      <MuiThemeProvider theme={theme}>{props.children}</MuiThemeProvider>\n    </CssBaseline>\n  );\n};\n\nexport default Theme;\n","import React from \"react\";\nimport { Field } from \"formik\";\nimport PropTypes from \"prop-types\";\nimport { TextField } from \"@material-ui/core\";\n\nconst TextInputWrapped = (props) => {\n  return <Field {...props} as={TextField} />;\n};\n\nTextInputWrapped.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default TextInputWrapped;\n","import * as yup from \"yup\";\n\n// you can store constants higher up that way if you have a app wide change to validation you can implement it there or you can make local ones like im doing here to help readability\nconst validationMessages = {\n  STRING: \"Must be a string k thanks\"\n};\n\n//im exporting the schema to improve readability where it is used, it should be noted that some yup options allow you to run ur own custom validation functions/regex so this helps brevity when used elsewhere\nexport const EditFormSchema = yup.object().shape({\n  title: yup\n    .string(validationMessages.STRING)\n    .min(2, \"Your Title is too Short!\")\n    .max(10, \"Uh try again, too long!\")\n    .required(\"You may not have a title, but this needs one.\"),\n  description: yup\n    .string(validationMessages.STRING)\n    .ensure()\n    .strict()\n    .when(\"title\", {\n      is: val => val === \"bob\",\n      then: yup\n        .string()\n        .required(\"Explain yourself bob!\")\n        .min(80),\n      otherwise: yup.string().notRequired()\n    })\n    .max(50, \"At this point you need an IOS press release\")\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport purple from \"@material-ui/core/colors/purple\";\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing(2)\n  }\n});\n\nfunction CircularIndeterminate(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <CircularProgress\n        className={classes.progress}\n        style={{ color: purple[600] }}\n        thickness={5}\n        size={200}\n      />\n    </div>\n  );\n}\n\nCircularIndeterminate.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(CircularIndeterminate);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Formik } from \"formik\";\nimport { Grid, Button, Paper, withStyles } from \"@material-ui/core\";\nimport { ArrowBackIos, DoneAllOutlined } from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchTodos,\n  editTodo,\n  completeTodo,\n  removeTodo,\n} from \"../store/actions/todos\";\nimport { TextInputWrapped } from \"../../shared\";\nimport { EditFormSchema } from \"./utils/EditValidation\";\nimport Loader from \"../Loader\";\n\nconst initialState = {\n  mounted: false,\n};\n\nconst styles = (theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh !important\",\n  },\n  edit: {\n    width: \"100%\",\n    maxWidth: 500,\n    padding: theme.spacing(3),\n  },\n  topButtons: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: theme.spacing(5),\n  },\n  titleEdit: {\n    width: \"100%\",\n    marginRight: theme.spacing(),\n  },\n  descInput: {\n    width: \"100%\",\n    marginBottom: theme.spacing(5),\n  },\n\n  detailsButtonText: {\n    fontSize: \"0.9vh\",\n  },\n});\n\nexport class TodoListDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ...initialState,\n    };\n  }\n\n  completedButtonHandler = (values) => {\n    const { completeTodo, history } = this.props;\n    completeTodo(values.id);\n    history.push(\"/\");\n  };\n\n  saveButtonHandler = (values) => {\n    const { history, editTodo } = this.props;\n    editTodo(values);\n    history.push(\"/\");\n  };\n\n  removeButtonHandler = () => {\n    const { removeTodo, todo, history } = this.props;\n    removeTodo(todo.id);\n    history.push(\"/\");\n  };\n\n  render() {\n    const { saveButtonHandler } = this;\n    const { todo, classes, mounted, history } = this.props;\n\n    return (\n      <div className={classes.container}>\n        {mounted ? (\n          <Formik\n            initialValues={todo}\n            validationSchema={EditFormSchema}\n            onSubmit={(values) => {\n              saveButtonHandler(values);\n            }}\n          >\n            {({\n              handleSubmit,\n              handleReset,\n              errors,\n              values,\n              handleChange,\n              touched,\n              isValid,\n            }) => (\n              <Paper>\n                <Grid container className={classes.edit}>\n                  <Grid item xs={12} className={classes.topButtons}>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      size=\"medium\"\n                      onClick={() => history.push(\"/\")}\n                    >\n                      <ArrowBackIos />\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"default\"\n                      size=\"medium\"\n                      disabled={values.completed}\n                      onClick={() => this.completedButtonHandler(todo.id)}\n                    >\n                      <DoneAllOutlined />\n                      Done\n                    </Button>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextInputWrapped\n                      className={classes.titleEdit}\n                      onChange={handleChange}\n                      label=\"Title\"\n                      name=\"title\"\n                      value={values.title}\n                      helperText={touched.title ? errors.title : \"\"}\n                      error={touched.title && Boolean(errors.title)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextInputWrapped\n                      className={classes.descInput}\n                      onChange={handleChange}\n                      label=\"Description\"\n                      name=\"description\"\n                      multiline\n                      value={values.description}\n                      helperText={touched.description ? errors.description : \"\"}\n                      error={touched.description && Boolean(errors.description)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid container spacing={6}>\n                      <Grid item xs={4}>\n                        <Button\n                          disabled={!isValid}\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={handleSubmit}\n                        >\n                          Save\n                        </Button>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"default\"\n                          onClick={handleReset}\n                        >\n                          Undo\n                        </Button>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={this.removeButtonHandler}\n                        >\n                          Remove\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Paper>\n            )}\n          </Formik>\n        ) : (\n          <Loader />\n        )}\n      </div>\n    );\n  }\n}\n\nTodoListDetails.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, props) => {\n  if (state.todos.mounted) {\n    const currentTodo = state.todos.todos.find(\n      (todo) => todo.id === parseInt(props.match.params.id, 10)\n    );\n    const { title, description, completed } = currentTodo;\n    const initialTodo = {\n      title: title,\n      description: description,\n      completed: completed,\n    };\n    return {\n      todo: currentTodo,\n      initialTodo: initialTodo,\n      mounted: state.todos.mounted,\n    };\n  }\n\n  return {\n    todo: {},\n    initialTodo: {},\n    mounted: state.todos.mounted,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchTodos: () => dispatch(fetchTodos()),\n  editTodo: (id, updates) => dispatch(editTodo(id, updates)),\n  completeTodo: (id) => dispatch(completeTodo(id)),\n  removeTodo: (id) => dispatch(removeTodo(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(TodoListDetails));\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { TodoMain } from \"./components/todo/TodoMain\";\nimport TodoEdit from \"./components/todo/TodoEdit\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={TodoMain} />\n          <Route path=\"/edit/:id\" component={TodoEdit} />\n          <Redirect path=\"*\" to=\"/\" />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Theme } from \"./shared\";\nimport { Provider } from \"react-redux\";\nimport config from \"./components/store/store\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nconst store = config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Theme>\n        <App />\n      </Theme>\n    </Provider>\n    ,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}